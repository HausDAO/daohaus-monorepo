/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TributeEscrow } from "./TributeEscrow";

export class TributeEscrowFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TributeEscrow> {
    return super.deploy(overrides || {}) as Promise<TributeEscrow>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TributeEscrow {
    return super.attach(address) as TributeEscrow;
  }
  connect(signer: Signer): TributeEscrowFactory {
    return super.connect(signer) as TributeEscrowFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TributeEscrow {
    return new Contract(address, _abi, signerOrProvider) as TributeEscrow;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "loot",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "proposalId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "escrow",
        type: "address",
      },
    ],
    name: "encodeTributeProposal",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "proposalId",
        type: "uint32",
      },
    ],
    name: "releaseEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Baal",
        name: "baal",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "loot",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "expiration",
        type: "uint32",
      },
      {
        internalType: "string",
        name: "details",
        type: "string",
      },
    ],
    name: "submitTributeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cd5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636bd4afe714610046578063aed794c61461006f578063ce05b5eb14610084575b600080fd5b610059610054366004610784565b610097565b6040516100669190610b64565b60405180910390f35b61008261007d3660046109ba565b61033b565b005b6100826100923660046108a4565b610556565b604080516001808252818301909252606091600091906020808301908036833701905050905084816000815181106100d1576100d1610c49565b6001600160a01b039092166020928302919091019091015260405163ffffffff8516602482015260009060440160408051601f19818403018152918152602080830180516001600160e01b031663576bca6360e11b179052825191519293506000926101469284928992849291889101610a8a565b60408051601f19818403018152919052905088156102235760408051600180825281830190925260009160208083019080368337019050509050898160008151811061019457610194610c49565b602002602001018181525050600084826040516024016101b5929190610ae0565b604051602081830303815290604052632c78fd0360e21b6001600160e01b0319166020820180516001600160e01b03838183161783525050505090508260008d600084518560405160200161020f96959493929190610a20565b604051602081830303815290604052925050505b87156102ee5760408051600180825281830190925260009160208083019080368337019050509050888160008151811061025f5761025f610c49565b60200260200101818152505060008482604051602401610280929190610ae0565b6040516020818303038152906040526322936c2360e11b6001600160e01b0319166020820180516001600160e01b03838183161783525050505090508260008d60008451856040516020016102da96959493929190610a20565b604051602081830303815290604052925050505b6000816040516024016103019190610b64565b60408051601f198184030181529190526020810180516001600160e01b03166346c07f8560e11b1790529450505050509695505050505050565b3360008181526020818152604080832063ffffffff861684529091529020600381015460ff16156103a65760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995b19585cd95960821b60448201526064015b60405180910390fd5b60405163118c2bff60e21b815263ffffffff841660048201526000906001600160a01b03841690634630affc9060240160806040518083038186803b1580156103ee57600080fd5b505afa158015610402573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042691906107f4565b60408101519091506104675760405162461bcd60e51b815260206004820152600a602482015269139bdd081c185cdcd95960b21b604482015260640161039d565b60038201805460ff1916600190811790915582549083015460028401546040516323b872dd60e01b81526001600160a01b0392831660048201528683166024820152604481019190915291169081906323b872dd90606401602060405180830381600087803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105119190610882565b61054f5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161039d565b5050505050565b6000886001600160a01b031663da35c6646040518163ffffffff1660e01b815260040160206040518083038186803b15801561059157600080fd5b505afa1580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c991906109d7565b6105d4906001610be3565b905060006105e68a8888888630610097565b905060405180608001604052808a6001600160a01b03168152602001866001600160a01b03168152602001898152602001600015158152506000808c6001600160a01b03166001600160a01b0316815260200190815260200160002060008463ffffffff16815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050896001600160a01b0316636561e53f8286866040518463ffffffff1660e01b815260040161071093929190610b77565b602060405180830381600087803b15801561072a57600080fd5b505af115801561073e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076291906109a1565b5050505050505050505050565b8051801515811461077f57600080fd5b919050565b60008060008060008060c0878903121561079d57600080fd5b86356107a881610c75565b9550602087013594506040870135935060608701356107c681610c75565b925060808701356107d681610c8d565b915060a08701356107e681610c75565b809150509295509295509295565b60006080828403121561080657600080fd5b82601f83011261081557600080fd5b6040516080810181811067ffffffffffffffff8211171561083857610838610c5f565b60405280836080810186101561084d57600080fd5b60005b6004811015610877576108628261076f565b83526020928301929190910190600101610850565b509195945050505050565b60006020828403121561089457600080fd5b61089d8261076f565b9392505050565b600080600080600080600080610100898b0312156108c157600080fd5b88356108cc81610c75565b97506020898101356108dd81610c75565b975060408a0135965060608a0135955060808a0135945060a08a013561090281610c75565b935060c08a013561091281610c8d565b925060e08a013567ffffffffffffffff8082111561092f57600080fd5b818c0191508c601f83011261094357600080fd5b81358181111561095557610955610c5f565b610967601f8201601f19168501610bb2565b91508082528d8482850101111561097d57600080fd5b80848401858401376000848284010152508093505050509295985092959890939650565b6000602082840312156109b357600080fd5b5051919050565b6000602082840312156109cc57600080fd5b813561089d81610c8d565b6000602082840312156109e957600080fd5b815161089d81610c8d565b60008151808452610a0c816020860160208601610c19565b601f01601f19169290920160200192915050565b60008751610a32818460208c01610c19565b808301905060ff60f81b8860f81b1681526bffffffffffffffffffffffff198760601b1660018201528560158201528460358201528351610a7a816055840160208801610c19565b0160550198975050505050505050565b60ff60f81b8660f81b1681526bffffffffffffffffffffffff198560601b16600182015283601582015282603582015260008251610acf816055850160208701610c19565b919091016055019695505050505050565b604080825283519082018190526000906020906060840190828701845b82811015610b225781516001600160a01b031684529284019290840190600101610afd565b5050508381038285015284518082528583019183019060005b81811015610b5757835183529284019291840191600101610b3b565b5090979650505050505050565b60208152600061089d60208301846109f4565b606081526000610b8a60608301866109f4565b63ffffffff851660208401528281036040840152610ba881856109f4565b9695505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610bdb57610bdb610c5f565b604052919050565b600063ffffffff808316818516808303821115610c1057634e487b7160e01b600052601160045260246000fd5b01949350505050565b60005b83811015610c34578181015183820152602001610c1c565b83811115610c43576000848401525b50505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610c8a57600080fd5b50565b63ffffffff81168114610c8a57600080fdfea2646970667358221220827085d58fd1c4b89d1ab93f56ee076b0d9377d856d26657f9034e8ab2f7737b64736f6c63430008070033";
